Функция СформироватьОтчет(Организация, Период) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Показатели = ПоказателиСверкиДанныхРегламентированныхОтчетов(Организация, НачалоГода(Период), КонецДня(Период));
	Макет = ПолучитьМакет("МакетОтчета");
	
	ОбластьЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ПредставлениеПериода = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(НачалоГода(Период), Период);
	ОбластьЗаголовок.Параметры.Заполнить(Новый Структура("Организация, Период", Организация, ПредставлениеПериода));
	ТабличныйДокумент.Вывести(ОбластьЗаголовок);
	
	Если Показатели.Количество() = 0 Тогда
		ОбластьНетДанных = Макет.ПолучитьОбласть("НетДанных");
		ТабличныйДокумент.Вывести(ОбластьНетДанных);
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	// Строки
	Периоды = НовыйПериоды(Период);
	ДополнитьПоказатели(Организация, Показатели, Периоды);
	ТаблицаСверкиДанных = ТаблицаСверкиДанныхРегламентированныхОтчетов(Показатели, Периоды);
	
	// Шапка
	Область = Макет.ПолучитьОбласть("Шапка|Показатель");
	ТабличныйДокумент.Присоединить(Область);
	Область = Макет.ПолучитьОбласть("Шапка|Период");
	Для Каждого СтрокаПериода Из Периоды Цикл
		Область.Параметры.Заполнить(СтрокаПериода);
		ТабличныйДокумент.Присоединить(Область);
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("СтрокаВерхнийУровень|Показатель");
	Область.Параметры.Показатель = "Декларация по налогу на прибыль";
	ТабличныйДокумент.Вывести(Область);
	ВывестиВидОтчетности(Макет, Периоды, ТаблицаСверкиДанных, "ПрибыльВидОтчетности", ТабличныйДокумент);
	
	Область = Макет.ПолучитьОбласть("СтрокаСреднийУровень|Показатель");
	Область.Параметры.Показатель = "Налоговая база по прибыли";
	ТабличныйДокумент.Вывести(Область);
	ВывестиЗначенияПоказателей(Макет, Периоды, "БазаПрибыль", ТаблицаСверкиДанных, ТабличныйДокумент);
	
	Область = Макет.ПолучитьОбласть("СтрокаНижнийУровень|Показатель");
	Область.Параметры.Показатель = "Доходы от реализации" + Символы.ПС + "Лист 02, строка 010";
	ТабличныйДокумент.Вывести(Область);
	ВывестиЗначенияПоказателей(Макет, Периоды, "ДоходыОтРеализации", ТаблицаСверкиДанных, ТабличныйДокумент, Истина);
	
	Область = Макет.ПолучитьОбласть("СтрокаНижнийУровень|Показатель");
	Область.Параметры.Показатель = "Внереализационные доходы" + Символы.ПС + "Лист 02, строка 020";
	ТабличныйДокумент.Вывести(Область);
	ВывестиЗначенияПоказателей(Макет, Периоды, "ВнереализационныеДоходы", ТаблицаСверкиДанных, ТабличныйДокумент, Истина);
	
	Область = Макет.ПолучитьОбласть("СтрокаВерхнийУровень|Показатель");
	Область.Параметры.Показатель = "Декларация по НДС";
	ТабличныйДокумент.Вывести(Область);
	ВывестиВидОтчетности(Макет, Периоды, ТаблицаСверкиДанных, "НДСВидОтчетности", ТабличныйДокумент);

	Область = Макет.ПолучитьОбласть("СтрокаСреднийУровень|Показатель");
	Область.Параметры.Показатель = "Налоговая база по НДС";
	ТабличныйДокумент.Вывести(Область);
	ВывестиЗначенияПоказателей(Макет, Периоды, "БазаНДС", ТаблицаСверкиДанных, ТабличныйДокумент);
	
	Область = Макет.ПолучитьОбласть("СтрокаНижнийУровень|Показатель");
	Область.Параметры.Показатель = "НДС по ставке 18%" + Символы.ПС + "Раздел 3, строка 010";
	ТабличныйДокумент.Вывести(Область);
	ВывестиЗначенияПоказателей(Макет, Периоды, "Выручка18", ТаблицаСверкиДанных, ТабличныйДокумент, Истина);

	Область = Макет.ПолучитьОбласть("СтрокаНижнийУровень|Показатель");
	Область.Параметры.Показатель = "НДС по ставке 10%" + Символы.ПС + "Раздел 3, строка 020";
	ТабличныйДокумент.Вывести(Область);
	ВывестиЗначенияПоказателей(Макет, Периоды, "Выручка10", ТаблицаСверкиДанных, ТабличныйДокумент, Истина);
	
	Область = Макет.ПолучитьОбласть("СтрокаНижнийУровень|Показатель");
	Область.Параметры.Показатель = "Подтвержденная реализация на экспорт" + Символы.ПС + "Раздел 4, строка 020";
	ТабличныйДокумент.Вывести(Область);
	ВывестиЗначенияПоказателей(Макет, Периоды, "РеализацияНаЭкспорт", ТаблицаСверкиДанных, ТабличныйДокумент, Истина);
	
	Область = Макет.ПолучитьОбласть("СтрокаСреднийУровень|Показатель");
	Область.Параметры.Показатель = "Разрешенные разницы";
	ТабличныйДокумент.Вывести(Область);
	ВывестиЗначенияПоказателей(Макет, Периоды, "НеподтвержденныйНДС", ТаблицаСверкиДанных, ТабличныйДокумент);

	Область = Макет.ПолучитьОбласть("СтрокаНижнийУровень|Показатель");
	Область.Параметры.Показатель = "Не подтвержденная реализация на" + Символы.ПС +  "экспорт";
	ТабличныйДокумент.Вывести(Область);
	ВывестиЗначенияПоказателей(Макет, Периоды, "НеподтвержденныйНДС", ТаблицаСверкиДанных, ТабличныйДокумент, Истина);
	
	Область = Макет.ПолучитьОбласть("СтрокаВерхнийУровень|Показатель");
	Область.Параметры.Показатель = "Разница";
	ТабличныйДокумент.Вывести(Область);
	ВывестиРазницу(Макет, Периоды, "Разница", ТаблицаСверкиДанных, ТабличныйДокумент);

	Возврат ТабличныйДокумент;
	
КонецФункции

#Область ВыводОтчета

Процедура ВывестиЗначенияПоказателей(Макет, Периоды, Показатель, ТаблицаСверкиДанных, ТабличныйДокумент, ЭтоРасшифровка = Ложь, ЭтоРазница = Ложь)
	
	Если ЭтоРасшифровка Тогда
		Область = Макет.ПолучитьОбласть("СтрокаНижнийУровень|Период");
	Иначе
		Область = Макет.ПолучитьОбласть("СтрокаСреднийУровень|Период");
	КонецЕсли;
	
	СтрокаПоказателя = ТаблицаСверкиДанных.НайтиСтроки(Новый Структура("ИмяПоказателя", Показатель))[0];
	Для Каждого СтрокаПериода Из Периоды Цикл
		ЗначениеПоказателя = СтрокаПоказателя[СтрокаПериода.ИмяКолонки];
		Область.Параметры.ЗначениеПоказателя = ЗначениеПоказателя;
		Если ЭтоРазница И ЗначениеПоказателя <> 0 Тогда
			Область.ТекущаяОбласть.ЦветТекста = Новый Цвет(255, 0, 0);
			//Область.ТекущаяОбласть.Шрифт = Новый Шрифт(Область.ТекущаяОбласть.Шрифт,,,Истина);
		Иначе
			Область.Рисунки.Очистить();
		КонецЕсли;
		ТабличныйДокумент.Присоединить(Область);
	КонецЦикла;

КонецПроцедуры

Процедура ВывестиРазницу(Макет, Периоды, Показатель, ТаблицаСверкиДанных, ТабличныйДокумент)
	
	СтрокаПоказателя = ТаблицаСверкиДанных.НайтиСтроки(Новый Структура("ИмяПоказателя", Показатель))[0];
	Для Каждого СтрокаПериода Из Периоды Цикл
		ЗначениеПоказателя = СтрокаПоказателя[СтрокаПериода.ИмяКолонки];
		
		Если ЗначениеПоказателя <> 0 Тогда
			Область = Макет.ПолучитьОбласть("СтрокаВерхнийУровеньСРисунком|Период");
		Иначе
			Область = Макет.ПолучитьОбласть("СтрокаВерхнийУровень|Период");
		КонецЕсли;
		
		Область.Параметры.ЗначениеПоказателя = ЗначениеПоказателя;
		ТабличныйДокумент.Присоединить(Область);
	КонецЦикла;

КонецПроцедуры


Процедура ВывестиВидОтчетности(Макет, Периоды, ТаблицаСверкиДанных, Показатель, ТабличныйДокумент)
	
	Область = Макет.ПолучитьОбласть("СтрокаВерхнийУровень|Период");
	СтрокаПоказателя = ТаблицаСверкиДанных.НайтиСтроки(Новый Структура("ИмяПоказателя", Показатель))[0];
	
	Для Каждого СтрокаПериода Из Периоды Цикл
		ЗначениеПоказателя = СтрокаПоказателя[СтрокаПериода.ИмяКолонки];
		Если ЗначениеПоказателя = 0 Тогда
			ЗначениеПоказателя = "х";
		ИначеЕсли ЗначениеПоказателя = 1 Тогда
			ЗначениеПоказателя = "Первичный";
		Иначе
			ЗначениеПоказателя = "К/" + (ЗначениеПоказателя - 1);
		КонецЕсли;
		Область.Параметры.ЗначениеПоказателя = ЗначениеПоказателя;
		ТабличныйДокумент.Присоединить(Область);
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТаблицаСверкиДанныхРегламентированныхОтчетов(Показатели, Периоды)

	ТаблицаСверкиДанных = Новый ТаблицаЗначений;
	ТаблицаСверкиДанных.Колонки.Добавить("ИмяПоказателя", ОбщегоНазначения.ОписаниеТипаСтрока(30));
	Для Каждого СтрокаПериода Из Периоды Цикл
		ТаблицаСверкиДанных.Колонки.Добавить(СтрокаПериода.ИмяКолонки, ОбщегоНазначения.ОписаниеТипаЧисло(15));
	КонецЦикла;
	ТаблицаСверкиДанных.Индексы.Добавить("ИмяПоказателя");
	
	// Расставим строки
	// 1. Декларация по налогу на прибыль - Вид отчетности
	СтрокаТаблицы = ТаблицаСверкиДанных.Добавить();
	СтрокаТаблицы.ИмяПоказателя = "ПрибыльВидОтчетности";
	Для Каждого СтрокаПериода Из Периоды Цикл
		Если НЕ (СтрокаПериода.ИмяКолонки = "Квартал1" ИЛИ СтрокаПериода.Накопительный) Тогда
			Продолжить;
		КонецЕсли;
		Отбор = Новый Структура("ДатаОкончания, ИсточникОтчета", СтрокаПериода.ДатаОтчета, "РегламентированныйОтчетПрибыль");
		СтрокаПоказателя = Показатели.НайтиСтроки(Отбор);
		Если СтрокаПоказателя.Количество() > 0 Тогда
			СтрокаТаблицы[СтрокаПериода.ИмяКолонки] = СтрокаПоказателя[0].Вид + 1;
		КонецЕсли;
	КонецЦикла;
	
	// 2. Декларация по НДС - Вид отчетности
	СтрокаТаблицы = ТаблицаСверкиДанных.Добавить();
	СтрокаТаблицы.ИмяПоказателя = "НДСВидОтчетности";
	Для Каждого СтрокаПериода Из Периоды Цикл
		Если СтрокаПериода.Накопительный Тогда
			Продолжить;
		КонецЕсли;
		Отбор = Новый Структура("ДатаОкончания, ИсточникОтчета", СтрокаПериода.ДатаОтчета, "РегламентированныйОтчетНДС");
		СтрокаПоказателя = Показатели.НайтиСтроки(Отбор);
		Если СтрокаПоказателя.Количество() > 0 Тогда
			СтрокаТаблицы[СтрокаПериода.ИмяКолонки] = СтрокаПоказателя[0].Вид + 1;
		КонецЕсли;
	КонецЦикла;
	
	// Расставим строки
	// 3. Декларация по налогу на прибыль - База прибыль
	СтрокаТаблицыБазаПрибыль = ТаблицаСверкиДанных.Добавить();
	СтрокаТаблицыБазаПрибыль.ИмяПоказателя = "БазаПрибыль";
	МассивПериодовДляРасчета = Новый Массив;
	Для Каждого СтрокаПериода Из Периоды Цикл
		Если НЕ (СтрокаПериода.ИмяКолонки = "Квартал1" ИЛИ СтрокаПериода.Накопительный) Тогда
			МассивПериодовДляРасчета.Добавить(СтрокаПериода.ИмяКолонки);
			Продолжить;
		КонецЕсли;
		Отбор = Новый Структура("ДатаОкончания, ИсточникОтчета", СтрокаПериода.ДатаОтчета, "РегламентированныйОтчетПрибыль");
		СтрокиПоказателей = Показатели.НайтиСтроки(Отбор);
		Для Каждого СтрокаПоказателя ИЗ СтрокиПоказателей Цикл
			СтрокаТаблицыБазаПрибыль[СтрокаПериода.ИмяКолонки] = СтрокаТаблицыБазаПрибыль[СтрокаПериода.ИмяКолонки] + СтрокаПоказателя.ЗначениеПоказателя;
		КонецЦикла;
	КонецЦикла;
	Для Каждого ПериодДляРасчета Из МассивПериодовДляРасчета Цикл
		ПоказателиДляРасчета = Новый Структура("Накопленное, Предыдущее",0,0);
		
		Если ПериодДляРасчета = "Квартал2" Тогда
			ПоказателиДляРасчета.Накопленное = СтрокаТаблицыБазаПрибыль.Полугодие;
			ПоказателиДляРасчета.Предыдущее = СтрокаТаблицыБазаПрибыль.Квартал1;
		ИначеЕсли ПериодДляРасчета = "Квартал3" Тогда
			ПоказателиДляРасчета.Накопленное = СтрокаТаблицыБазаПрибыль.Месяцев9;
			ПоказателиДляРасчета.Предыдущее = СтрокаТаблицыБазаПрибыль.Полугодие;
		ИначеЕсли ПериодДляРасчета = "Квартал4" Тогда
			ПоказателиДляРасчета.Накопленное = СтрокаТаблицыБазаПрибыль.Год;
			ПоказателиДляРасчета.Предыдущее = СтрокаТаблицыБазаПрибыль.Месяцев9;
		КонецЕсли;
		Если ПоказателиДляРасчета.Накопленное = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыБазаПрибыль[ПериодДляРасчета] = ПоказателиДляРасчета.Накопленное - ПоказателиДляРасчета.Предыдущее;
	КонецЦикла;
	
	// 4. Декларация по налогу на прибыль - Доходы от реализации
	ДобавитьПоказательПрибыль(ТаблицаСверкиДанных, "ДоходыОтРеализации", Периоды, Показатели);

	// 5. Декларация по налогу на прибыль - ВнереализационныеДоходы
	ДобавитьПоказательПрибыль(ТаблицаСверкиДанных, "ВнереализационныеДоходы", Периоды, Показатели);

	// Расставим строки
	// 6. Декларация по НДС - База НДС
	СтрокаТаблицыБазаНДС = ТаблицаСверкиДанных.Добавить();
	СтрокаТаблицыБазаНДС.ИмяПоказателя = "БазаНДС";
	МассивПериодовДляРасчета = Новый Массив;
	Для Каждого СтрокаПериода Из Периоды Цикл
		Если СтрокаПериода.Накопительный Тогда
			МассивПериодовДляРасчета.Добавить(СтрокаПериода.ИмяКолонки);
			Продолжить;
		КонецЕсли;
		
		Отбор = Новый Структура("ДатаОкончания, ИсточникОтчета", СтрокаПериода.ДатаОтчета, "РегламентированныйОтчетНДС");
		СтрокиПоказателей = Показатели.НайтиСтроки(Отбор);
		Для Каждого СтрокаПоказателя ИЗ СтрокиПоказателей Цикл
			СтрокаТаблицыБазаНДС[СтрокаПериода.ИмяКолонки] = СтрокаТаблицыБазаНДС[СтрокаПериода.ИмяКолонки] + СтрокаПоказателя.ЗначениеПоказателя;
		КонецЦикла;
	КонецЦикла;
	Для Каждого ПериодДляРасчета Из МассивПериодовДляРасчета Цикл
		ПоказателиДляРасчета = Новый Структура("Слагаемое1, Слагаемое2",0,0);
		
		Если ПериодДляРасчета = "Полугодие" Тогда
			ПоказателиДляРасчета.Слагаемое1 = СтрокаТаблицыБазаНДС.Квартал1;
			ПоказателиДляРасчета.Слагаемое2 = СтрокаТаблицыБазаНДС.Квартал2;
		ИначеЕсли ПериодДляРасчета = "Месяцев9" Тогда
			ПоказателиДляРасчета.Слагаемое1 = СтрокаТаблицыБазаНДС.Полугодие;
			ПоказателиДляРасчета.Слагаемое2 = СтрокаТаблицыБазаНДС.Квартал3;
		ИначеЕсли ПериодДляРасчета = "Год" Тогда
			ПоказателиДляРасчета.Слагаемое1 = СтрокаТаблицыБазаНДС.Месяцев9;
			ПоказателиДляРасчета.Слагаемое2 = СтрокаТаблицыБазаНДС.Квартал4;
		КонецЕсли;
		Если ПоказателиДляРасчета.Слагаемое2 = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыБазаНДС[ПериодДляРасчета] = ПоказателиДляРасчета.Слагаемое1 + ПоказателиДляРасчета.Слагаемое2;
	КонецЦикла;
	
	// 7. Декларация по НДС - Выручка 18%
	ДобавитьПоказательНДС(ТаблицаСверкиДанных, "Выручка18", Периоды, Показатели);
	
	// 8. Декларация по НДС - Выручка 10%
	ДобавитьПоказательНДС(ТаблицаСверкиДанных, "Выручка10", Периоды, Показатели);
	
	// 9. Декларация по НДС - Реализация на экспорт
	ДобавитьПоказательНДС(ТаблицаСверкиДанных, "РеализацияНаЭкспорт", Периоды, Показатели);
	
	// 10. Не подтвержденный НДС
	СтрокаТаблицыРазрешеннаяРазница = ТаблицаСверкиДанных.Добавить();
	СтрокаТаблицыРазрешеннаяРазница.ИмяПоказателя = "НеподтвержденныйНДС";
	МассивПериодовДляРасчета = Новый Массив;
	Для Каждого СтрокаПериода Из Периоды Цикл
		Если НЕ (СтрокаПериода.ИмяКолонки = "Квартал1" ИЛИ СтрокаПериода.Накопительный) Тогда
			МассивПериодовДляРасчета.Добавить(СтрокаПериода.ИмяКолонки);
			Продолжить;
		КонецЕсли;
		
		Отбор = Новый Структура("ДатаОкончания, ИсточникОтчета, Показатель", СтрокаПериода.ДатаОтчета, "РазрешенныеРазницы", "НеподтвержденныйНДС");
		СтрокиПоказателей = Показатели.НайтиСтроки(Отбор);
		Для Каждого СтрокаПоказателя ИЗ СтрокиПоказателей Цикл
			СтрокаТаблицыРазрешеннаяРазница[СтрокаПериода.ИмяКолонки] = СтрокаТаблицыРазрешеннаяРазница[СтрокаПериода.ИмяКолонки] + СтрокаПоказателя.ЗначениеПоказателя;
		КонецЦикла;
	КонецЦикла;
	Для Каждого ПериодДляРасчета Из МассивПериодовДляРасчета Цикл
		ПоказателиДляРасчета = Новый Структура("Накопленное, Предыдущее",0,0);
		
		Если ПериодДляРасчета = "Квартал2" Тогда
			ПоказателиДляРасчета.Накопленное = СтрокаТаблицыРазрешеннаяРазница.Полугодие;
			ПоказателиДляРасчета.Предыдущее = СтрокаТаблицыРазрешеннаяРазница.Квартал1;
		ИначеЕсли ПериодДляРасчета = "Квартал3" Тогда
			ПоказателиДляРасчета.Накопленное = СтрокаТаблицыРазрешеннаяРазница.Месяцев9;
			ПоказателиДляРасчета.Предыдущее = СтрокаТаблицыРазрешеннаяРазница.Полугодие;
		ИначеЕсли ПериодДляРасчета = "Квартал4" Тогда
			ПоказателиДляРасчета.Накопленное = СтрокаТаблицыРазрешеннаяРазница.Год;
			ПоказателиДляРасчета.Предыдущее = СтрокаТаблицыРазрешеннаяРазница.Месяцев9;
		КонецЕсли;
		Если ПоказателиДляРасчета.Накопленное = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицыРазрешеннаяРазница[ПериодДляРасчета] = ПоказателиДляРасчета.Накопленное - ПоказателиДляРасчета.Предыдущее;
	КонецЦикла;

	// 10. Разница
	СтрокаТаблицы = ТаблицаСверкиДанных.Добавить();
	СтрокаТаблицы.ИмяПоказателя = "Разница";
	Для Каждого СтрокаПериода Из Периоды Цикл
		СтрокаТаблицы[СтрокаПериода.ИмяКолонки] = 
			СтрокаТаблицыБазаПрибыль[СтрокаПериода.ИмяКолонки] - СтрокаТаблицыБазаНДС[СтрокаПериода.ИмяКолонки] - СтрокаТаблицыРазрешеннаяРазница[СтрокаПериода.ИмяКолонки];
	КонецЦикла;
	
	Возврат ТаблицаСверкиДанных;
	
КонецФункции

Процедура ДобавитьПоказательПрибыль(ТаблицаСверкиДанных, ИмяПоказателя, Периоды, Показатели)
	
	СтрокаТаблицы = ТаблицаСверкиДанных.Добавить();
	СтрокаТаблицы.ИмяПоказателя = ИмяПоказателя;
	МассивПериодовДляРасчета = Новый Массив;
	Для Каждого СтрокаПериода Из Периоды Цикл
		
		Если НЕ (СтрокаПериода.ИмяКолонки = "Квартал1" ИЛИ СтрокаПериода.Накопительный) Тогда
			МассивПериодовДляРасчета.Добавить(СтрокаПериода.ИмяКолонки);
			Продолжить;
		КонецЕсли;
		
		Отбор = Новый Структура("ДатаОкончания, ИсточникОтчета, Показатель", СтрокаПериода.ДатаОтчета, "РегламентированныйОтчетПрибыль", ИмяПоказателя);
		СтрокиПоказателей = Показатели.НайтиСтроки(Отбор);
		Для Каждого СтрокаПоказателя ИЗ СтрокиПоказателей Цикл
			СтрокаТаблицы[СтрокаПериода.ИмяКолонки] = СтрокаТаблицы[СтрокаПериода.ИмяКолонки] + СтрокаПоказателя.ЗначениеПоказателя;
		КонецЦикла;
	КонецЦикла;
	Для Каждого ПериодДляРасчета Из МассивПериодовДляРасчета Цикл
		ПоказателиДляРасчета = Новый Структура("Накопленное, Предыдущее",0,0);
		
		Если ПериодДляРасчета = "Квартал2" Тогда
			ПоказателиДляРасчета.Накопленное = СтрокаТаблицы.Полугодие;
			ПоказателиДляРасчета.Предыдущее = СтрокаТаблицы.Квартал1;
		ИначеЕсли ПериодДляРасчета = "Квартал3" Тогда
			ПоказателиДляРасчета.Накопленное = СтрокаТаблицы.Месяцев9;
			ПоказателиДляРасчета.Предыдущее = СтрокаТаблицы.Полугодие;
		ИначеЕсли ПериодДляРасчета = "Квартал4" Тогда
			ПоказателиДляРасчета.Накопленное = СтрокаТаблицы.Год;
			ПоказателиДляРасчета.Предыдущее = СтрокаТаблицы.Месяцев9;
		КонецЕсли;
		Если ПоказателиДляРасчета.Накопленное = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицы[ПериодДляРасчета] = ПоказателиДляРасчета.Накопленное - ПоказателиДляРасчета.Предыдущее;
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьПоказательНДС(ТаблицаСверкиДанных, ИмяПоказателя, Периоды, Показатели)

	СтрокаТаблицы = ТаблицаСверкиДанных.Добавить();
	СтрокаТаблицы.ИмяПоказателя = ИмяПоказателя;
	МассивПериодовДляРасчета = Новый Массив;
	Для Каждого СтрокаПериода Из Периоды Цикл
		Если СтрокаПериода.Накопительный Тогда
			МассивПериодовДляРасчета.Добавить(СтрокаПериода.ИмяКолонки);
			Продолжить;
		КонецЕсли;
		
		Отбор = Новый Структура("ДатаОкончания, ИсточникОтчета, Показатель", СтрокаПериода.ДатаОтчета, "РегламентированныйОтчетНДС", ИмяПоказателя);
		СтрокиПоказателей = Показатели.НайтиСтроки(Отбор);
		Для Каждого СтрокаПоказателя ИЗ СтрокиПоказателей Цикл
			СтрокаТаблицы[СтрокаПериода.ИмяКолонки] = СтрокаТаблицы[СтрокаПериода.ИмяКолонки] + СтрокаПоказателя.ЗначениеПоказателя;
		КонецЦикла;
	КонецЦикла;
	Для Каждого ПериодДляРасчета Из МассивПериодовДляРасчета Цикл
		ПоказателиДляРасчета = Новый Структура("Слагаемое1, Слагаемое2",0,0);
		
		Если ПериодДляРасчета = "Полугодие" Тогда
			ПоказателиДляРасчета.Слагаемое1 = СтрокаТаблицы.Квартал1;
			ПоказателиДляРасчета.Слагаемое2 = СтрокаТаблицы.Квартал2;
		ИначеЕсли ПериодДляРасчета = "Месяцев9" Тогда
			ПоказателиДляРасчета.Слагаемое1 = СтрокаТаблицы.Полугодие;
			ПоказателиДляРасчета.Слагаемое2 = СтрокаТаблицы.Квартал3;
		ИначеЕсли ПериодДляРасчета = "Год" Тогда
			ПоказателиДляРасчета.Слагаемое1 = СтрокаТаблицы.Месяцев9;
			ПоказателиДляРасчета.Слагаемое2 = СтрокаТаблицы.Квартал4;
		КонецЕсли;
		Если ПоказателиДляРасчета.Слагаемое2 = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицы[ПериодДляРасчета] = ПоказателиДляРасчета.Слагаемое1 + ПоказателиДляРасчета.Слагаемое2;
	КонецЦикла;

КонецПроцедуры

Функция НовыйПериоды(Знач Период)
	
	Периоды = Новый ТаблицаЗначений;
	Периоды.Колонки.Добавить("ИмяПериода", ОбщегоНазначения.ОписаниеТипаСтрока(20));
	Периоды.Колонки.Добавить("ИмяКолонки", ОбщегоНазначения.ОписаниеТипаСтрока(20));
	Периоды.Колонки.Добавить("ДатаОтчета", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	Периоды.Колонки.Добавить("Накопительный", Новый ОписаниеТипов("Булево"));
	Период = КонецКвартала(Период);
	
	НачалоГода = НачалоГода(Период);
	
	Для НомерКвартала = 1 По 4 Цикл
		Квартал = КонецКвартала(ДобавитьМесяц(НачалоГода, 3 * НомерКвартала)-1);
		Если Квартал <= Период Тогда
			ИмяПериода = СтрШаблон("%1 квартал", НомерКвартала);
			ИмяКолонки = СтрШаблон("Квартал%1", НомерКвартала);
			СтрокаПериода = Периоды.Добавить();
			СтрокаПериода.ИмяПериода = ИмяПериода;
			СтрокаПериода.ИмяКолонки = ИмяКолонки;
			СтрокаПериода.ДатаОтчета = Квартал;
		Иначе
			Прервать;
		КонецЕсли;
		Если НомерКвартала = 2 Тогда
			СтрокаПериода = Периоды.Добавить();
			СтрокаПериода.ИмяПериода = "Полугодие";
			СтрокаПериода.ИмяКолонки = "Полугодие";
			СтрокаПериода.ДатаОтчета = Квартал;
			СтрокаПериода.Накопительный = Истина;
		ИначеЕсли НомерКвартала = 3 Тогда
			СтрокаПериода = Периоды.Добавить();
			СтрокаПериода.ИмяПериода = "9 месяцев";
			СтрокаПериода.ИмяКолонки = "Месяцев9";
			СтрокаПериода.ДатаОтчета = Квартал;
			СтрокаПериода.Накопительный = Истина;
		ИначеЕсли НомерКвартала = 4 Тогда
			СтрокаПериода = Периоды.Добавить();
			СтрокаПериода.ИмяПериода = "Год";
			СтрокаПериода.ИмяКолонки = "Год";
			СтрокаПериода.ДатаОтчета = Квартал;
			СтрокаПериода.Накопительный = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Периоды;
	
КонецФункции

Процедура ДополнитьПоказатели(Организация, Показатели, Периоды)

	// TODO Переделать запрос в цикле
	Для Каждого СтрокаПериода Из Периоды Цикл
		Если СтрокаПериода.Накопительный Тогда
			Продолжить;
		КонецЕсли;
		СтрокаПоказателя = Показатели.Добавить();
		СтрокаПоказателя.ИсточникОтчета = "РазрешенныеРазницы";
		СтрокаПоказателя.Показатель = "НеподтвержденныйНДС";
		СтрокаПоказателя.ДатаОтчета = СтрокаПериода.ДатаОтчета;
		СтрокаПоказателя.ДатаОкончания = СтрокаПериода.ДатаОтчета;
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Период", КонецДня(СтрокаПериода.ДатаОтчета));
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НДСРеализация0Остатки.СуммаБезНДСОстаток КАК Сумма
		|ИЗ
		|	РегистрНакопления.НДСРеализация0.Остатки(
		|			&Период,
		|			Организация = &Организация
		|				И Состояние <> ЗНАЧЕНИЕ(Перечисление.НДССостоянияРеализация0.ПодтвержденаРеализация0)) КАК НДСРеализация0Остатки";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СтрокаПоказателя.ЗначениеПоказателя = Выборка.Сумма;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#Область ПолучениеДанныхРегламентированныхОтчетов

Функция ПоказателиСверкиДанныхРегламентированныхОтчетов(Организация, ДатаНачала, ДатаОкончания)
	
	ТаблицаОтчетов = ОтчетыСверкиДанныхРегламентированныхОтчетов(Организация, ДатаНачала, ДатаОкончания);
	
	ТаблицаПоказателей = НоваяТаблицаПоказателейСверкиДанныхРегламентированныхОтчетов();
	
	Для Каждого СтрокаОтчета Из ТаблицаОтчетов Цикл
		ВставитьПоказательВТаблицуСверкиДанныхРегламентированныхОтчетов(ТаблицаПоказателей, СтрокаОтчета);
	КонецЦикла;
	
	Возврат ТаблицаПоказателей
	
КонецФункции

Функция ОтчетыСверкиДанныхРегламентированныхОтчетов(Организация, ДатаНачала, ДатаОкончания)
	
	ТаблицаОтчетов = Новый ТаблицаЗначений;
	ТаблицаОтчетов.Колонки.Добавить("РегламентированныйОтчет");
	ТаблицаОтчетов.Колонки.Добавить("ИсточникОтчета");
	ТаблицаОтчетов.Колонки.Добавить("ВыбраннаяФорма");
	ТаблицаОтчетов.Колонки.Добавить("ПериодДокумента");
	ТаблицаОтчетов.Колонки.Добавить("КодНалоговогоОргана");
	ТаблицаОтчетов.Колонки.Добавить("Вид");
	ТаблицаОтчетов.Колонки.Добавить("МоментВремени");
	ТаблицаОтчетов.Колонки.Добавить("ДатаОтчета");
	ТаблицаОтчетов.Колонки.Добавить("ОтчетныйПериод");
	ТаблицаОтчетов.Колонки.Добавить("Периодичность");
	ТаблицаОтчетов.Колонки.Добавить("ДатаНачала");
	ТаблицаОтчетов.Колонки.Добавить("ДатаОкончания");
	
	ВидыОтчетов = ВидыСверкиДанныхРегламентированныхОтчетов();
	Выборка = РегламентированнаяОтчетность.ВыборкаРегламентированныхОтчетов(Организация, ДатаНачала, ДатаОкончания, ВидыОтчетов);
	
	Пока Выборка.Следующий() Цикл
		
		УсловияПоиска = Новый Структура("ИсточникОтчета, ПериодДокумента, КодНалоговогоОргана");
		ЗаполнитьЗначенияСвойств(УсловияПоиска, Выборка);
		
		СтрокиТаблицыОтчетов = ТаблицаОтчетов.НайтиСтроки(УсловияПоиска);
		
		Если СтрокиТаблицыОтчетов.Количество() = 0 Тогда
			// Отчет еще не учитывался.
			НоваяСтрокаТаблицы = ТаблицаОтчетов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, Выборка);
			
		Иначе
			СтрокаТаблицы = СтрокиТаблицыОтчетов[0];
			
			Если СтрСравнить(Выборка.ВыбраннаяФорма, СтрокаТаблицы.ВыбраннаяФорма) > 0 Тогда
				// Поздняя форма отчета вытесняет предшествующие.
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
				
			ИначеЕсли СтрСравнить(Выборка.ВыбраннаяФорма, СтрокаТаблицы.ВыбраннаяФорма) = 0 Тогда
				Если СтрокаТаблицы.РегламентированныйОтчет.СтатусОтчета = "Сдано" И
					Выборка.РегламентированныйОтчет.СтатусОтчета <> "Сдано" Тогда
					Продолжить;
				КонецЕсли;
				
				Если Выборка.Вид > СтрокаТаблицы.Вид Тогда
					// Поздние корректировки вытесняют предшествующие.
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
					
				ИначеЕсли Выборка.Вид = СтрокаТаблицы.Вид Тогда
					Если Выборка.МоментВремени.Сравнить(СтрокаТаблицы.МоментВремени) > 0 Тогда
						// Отчеты созданные позже вытесняют предшествующие.
						ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаОтчетов;
	
КонецФункции

Функция ВидыСверкиДанныхРегламентированныхОтчетов()
	
	ВидыОтчетов = Новый Массив;
	
	ВидыОтчетов.Добавить("РегламентированныйОтчетПрибыль");
	ВидыОтчетов.Добавить("РегламентированныйОтчетНДС");
	
	Возврат ВидыОтчетов;
	
КонецФункции

Функция НоваяТаблицаПоказателейСверкиДанныхРегламентированныхОтчетов();
	
	ТипСтрока  = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254));
	ТипСтрока4 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(4));
	ТипДата    = Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты);
	ТипЧисло   = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2));
	
	ТаблицаПоказателей = Новый ТаблицаЗначений;
	ТаблицаПоказателей.Колонки.Добавить("Показатель", ТипСтрока);
	ТаблицаПоказателей.Колонки.Добавить("ИсточникОтчета", ТипСтрока);
	ТаблицаПоказателей.Колонки.Добавить("ДатаОтчета", ТипДата);
	ТаблицаПоказателей.Колонки.Добавить("РегламентированныйОтчет", ОбщегоНазначения.ОписаниеТипаВсеСсылки());
	ТаблицаПоказателей.Колонки.Добавить("ОтчетныйПериод", ТипДата);
	ТаблицаПоказателей.Колонки.Добавить("КодНалоговогоОргана", ТипСтрока4);
	ТаблицаПоказателей.Колонки.Добавить("Периодичность");
	ТаблицаПоказателей.Колонки.Добавить("ДатаНачала", ТипДата);
	ТаблицаПоказателей.Колонки.Добавить("ДатаОкончания", ТипДата);
	ТаблицаПоказателей.Колонки.Добавить("ПериодДокумента", ТипСтрока);
	ТаблицаПоказателей.Колонки.Добавить("ЗначениеПоказателя", ТипЧисло);
	ТаблицаПоказателей.Колонки.Добавить("Вид", ТипЧисло);
	
	Возврат ТаблицаПоказателей;
	
КонецФункции

Процедура ВставитьПоказательВТаблицуСверкиДанныхРегламентированныхОтчетов(ТаблицаПоказателей, ОписаниеОтчета)
	
	Если ОписаниеОтчета.ИсточникОтчета = "РегламентированныйОтчетПрибыль" Тогда
		ВставитьПоказатели_Прибыль(ТаблицаПоказателей, ОписаниеОтчета);
		
	ИначеЕсли ОписаниеОтчета.ИсточникОтчета = "РегламентированныйОтчетНДС" Тогда
		ВставитьПоказатели_НДС(ТаблицаПоказателей, ОписаниеОтчета);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВставитьПоказатели_Прибыль(ТаблицаПоказателей, ОписаниеОтчета)
	
	СведенияОтчета = ОписаниеОтчета.РегламентированныйОтчет.ДанныеОтчета.Получить();
	
	ЗначениеПоказателя = 0;
	
	Если ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2016Кв4"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2015Кв1" Тогда
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + ПоказательОтчета(ДанныеЛиста, "П000200001003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "ДоходыОтРеализации";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + ПоказательОтчета(ДанныеЛиста, "П000200002003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "ВнереализационныеДоходы";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
	Иначе
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + ПоказательОтчета(ДанныеЛиста, "П002000001003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "ДоходыОтРеализации";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + ПоказательОтчета(ДанныеЛиста, "П002000002003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "ВнереализационныеДоходы";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВставитьПоказатели_НДС(ТаблицаПоказателей, ОписаниеОтчета)
	
	СведенияОтчета = ОписаниеОтчета.РегламентированныйОтчет.ДанныеОтчета.Получить();
	
	Раздел3 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел3;
	
	// 18%
	ЗначениеПоказателя = ПоказательОтчета(Раздел3, "П000300001003");
	НоваяСтрока = ТаблицаПоказателей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
	НоваяСтрока.Показатель = "Выручка18";
	НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
	
	// 10%
	ЗначениеПоказателя = ПоказательОтчета(Раздел3, "П000300002003");
	НоваяСтрока = ТаблицаПоказателей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
	НоваяСтрока.Показатель = "Выручка10";
	НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
	
	Раздел4 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел4;
	
	// 10%
	ЗначениеПоказателя = ПоказательОтчета(Раздел4, "П000400002003_1");
	НоваяСтрока = ТаблицаПоказателей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
	НоваяСтрока.Показатель = "РеализацияНаЭкспорт";
	НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
	
КонецПроцедуры

Функция ПоказательОтчета(ИсточникСведений, ИмяПоказателя)
	
	ЗначениеПоказателя = 0;
	
	Если ТипЗнч(ИсточникСведений) = Тип("Структура") Тогда
		Если ИсточникСведений.Свойство(ИмяПоказателя) Тогда
			ЗначениеПоказателя = ИсточникСведений[ИмяПоказателя];
		КонецЕсли;
		
	Иначе
		ВызватьИсключение "Попытка получить значение показателя, сохраненного в неподдерживаемом типе данных";
		
	КонецЕсли;
	
	Возврат ЗначениеПоказателя;
	
КонецФункции

#КонецОбласти

#КонецОбласти
