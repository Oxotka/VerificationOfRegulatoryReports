Функция СформироватьОтчет(Организация, Период) Экспорт
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	Показатели = ПоказателиСверкиДанныхРегламентированныхОтчетов(Организация, НачалоГода(Период), КонецДня(Период));
	
	Если Показатели.Количество() = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Данных не найдено");
		Возврат ТабличныйДокумент;
	КонецЕсли;
	
	// Строки
	Периоды = НовыйПериоды(Период);
	
	// Подготовить таблицу
	ТаблицаСверкиДанных = ТаблицаСверкиДанныхРегламентированныхОтчетов(Показатели, Периоды);
	
	// Шапка
	Макет = ПолучитьМакет("ДругойВариант");
	Область = Макет.ПолучитьОбласть("Шапка|Показатель");
	ТабличныйДокумент.Присоединить(Область);
	Область = Макет.ПолучитьОбласть("Шапка|Период");
	Для Каждого СтрокаПериода Из Периоды Цикл
		Область.Параметры.Заполнить(СтрокаПериода);
		ТабличныйДокумент.Присоединить(Область);
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Строка|Показатель");
	// Вид декларации по прибыли
	Область.Параметры.Показатель = "Декларация по прибыли";
	ТабличныйДокумент.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Строка|Период");
	Показатель = "ПрибыльВидОтчетности";
	СтрокаПоказателя = ТаблицаСверкиДанных.НайтиСтроки(Новый Структура("ИмяПоказателя", Показатель))[0];
	
	Для Каждого СтрокаПериода Из Периоды Цикл
		ЗначениеПоказателя = СтрокаПоказателя[СтрокаПериода.ИмяКолонки];
		Если ЗначениеПоказателя = 0 Тогда
			ЗначениеПоказателя = "х";
		ИначеЕсли ЗначениеПоказателя = 1 Тогда
			ЗначениеПоказателя = "Первичный";
		Иначе
			ЗначениеПоказателя = "К/" + ЗначениеПоказателя - 1;
		КонецЕсли;
		Область.Параметры.ЗначениеПоказателя = ЗначениеПоказателя;
		ТабличныйДокумент.Присоединить(Область);
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Строка|Показатель");
	// База прибыль
	Область.Параметры.Показатель = "База прибыль";
	ТабличныйДокумент.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Строка|Период");
	Показатель = "БазаПрибыль";
	СтрокаПоказателя = ТаблицаСверкиДанных.НайтиСтроки(Новый Структура("ИмяПоказателя", Показатель))[0];
	
	Для Каждого СтрокаПериода Из Периоды Цикл
		Область.Параметры.ЗначениеПоказателя = СтрокаПоказателя[СтрокаПериода.ИмяКолонки];
		ТабличныйДокумент.Присоединить(Область);
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Строка|Показатель");
	// Вид декларации по НДС
	Область.Параметры.Показатель = "Декларация по НДС";
	ТабличныйДокумент.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Строка|Период");
	Показатель = "НДСВидОтчетности";
	СтрокаПоказателя = ТаблицаСверкиДанных.НайтиСтроки(Новый Структура("ИмяПоказателя", Показатель))[0];
	
	Для Каждого СтрокаПериода Из Периоды Цикл
		ЗначениеПоказателя = СтрокаПоказателя[СтрокаПериода.ИмяКолонки];
		Если ЗначениеПоказателя = 0 Тогда
			ЗначениеПоказателя = "х";
		ИначеЕсли ЗначениеПоказателя = 1 Тогда
			ЗначениеПоказателя = "Первичный";
		Иначе
			ЗначениеПоказателя = "К/" + ЗначениеПоказателя - 1;
		КонецЕсли;
		Область.Параметры.ЗначениеПоказателя = ЗначениеПоказателя;
		ТабличныйДокумент.Присоединить(Область);
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("Строка|Показатель");
	// База прибыль
	Область.Параметры.Показатель = "База прибыль";
	ТабличныйДокумент.Вывести(Область);
	
	Область = Макет.ПолучитьОбласть("Строка|Период");
	Показатель = "БазаНДС";
	СтрокаПоказателя = ТаблицаСверкиДанных.НайтиСтроки(Новый Структура("ИмяПоказателя", Показатель))[0];
	
	Для Каждого СтрокаПериода Из Периоды Цикл
		Область.Параметры.ЗначениеПоказателя = СтрокаПоказателя[СтрокаПериода.ИмяКолонки];
		ТабличныйДокумент.Присоединить(Область);
	КонецЦикла;	
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Функция ТаблицаСверкиДанныхРегламентированныхОтчетов(Показатели, Периоды)

	ТаблицаСверкиДанных = Новый ТаблицаЗначений;
	ТаблицаСверкиДанных.Колонки.Добавить("ИмяПоказателя", ОбщегоНазначения.ОписаниеТипаСтрока(30));
	Для Каждого СтрокаПериода Из Периоды Цикл
		ТаблицаСверкиДанных.Колонки.Добавить(СтрокаПериода.ИмяКолонки, ОбщегоНазначения.ОписаниеТипаЧисло(15));
	КонецЦикла;
	ТаблицаСверкиДанных.Индексы.Добавить("ИмяПоказателя");
	
	// Расставим строки
	// 1. Декларация по налогу на прибыль - Вид отчетности
	СтрокаТаблицы = ТаблицаСверкиДанных.Добавить();
	СтрокаТаблицы.ИмяПоказателя = "ПрибыльВидОтчетности";
	Для Каждого СтрокаПериода Из Периоды Цикл
		
		Если НЕ (СтрокаПериода.ИмяКолонки = "Квартал1" ИЛИ СтрокаПериода.Накопительный) Тогда
			Продолжить;
		КонецЕсли;
		
		Отбор = Новый Структура("ДатаОкончания, ИсточникОтчета", СтрокаПериода.ДатаОтчета, "РегламентированныйОтчетПрибыль");
		СтрокаПоказателя = Показатели.НайтиСтроки(Отбор);
		Если СтрокаПоказателя.Количество() > 0 Тогда
			СтрокаТаблицы[СтрокаПериода.ИмяКолонки] = СтрокаПоказателя[0].Вид + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	// 2. Декларация по НДС - Вид отчетности
	СтрокаТаблицы = ТаблицаСверкиДанных.Добавить();
	СтрокаТаблицы.ИмяПоказателя = "НДСВидОтчетности";
	Для Каждого СтрокаПериода Из Периоды Цикл
		
		Если СтрокаПериода.Накопительный Тогда
			Продолжить;
		КонецЕсли;
		
		Отбор = Новый Структура("ДатаОкончания, ИсточникОтчета", СтрокаПериода.ДатаОтчета, "РегламентированныйОтчетНДС");
		СтрокаПоказателя = Показатели.НайтиСтроки(Отбор);
		Если СтрокаПоказателя.Количество() > 0 Тогда
			СтрокаТаблицы[СтрокаПериода.ИмяКолонки] = СтрокаПоказателя[0].Вид + 1;
		КонецЕсли;
		
	КонецЦикла;
	
	// Расставим строки
	// 3. Декларация по налогу на прибыль - База прибыль
	СтрокаТаблицы = ТаблицаСверкиДанных.Добавить();
	СтрокаТаблицы.ИмяПоказателя = "БазаПрибыль";
	МассивПериодовДляРасчета = Новый Массив;
	Для Каждого СтрокаПериода Из Периоды Цикл
		
		Если НЕ (СтрокаПериода.ИмяКолонки = "Квартал1" ИЛИ СтрокаПериода.Накопительный) Тогда
			МассивПериодовДляРасчета.Добавить(СтрокаПериода.ИмяКолонки);
			Продолжить;
		КонецЕсли;
		
		Отбор = Новый Структура("ДатаОкончания, ИсточникОтчета", СтрокаПериода.ДатаОтчета, "РегламентированныйОтчетПрибыль");
		СтрокиПоказателей = Показатели.НайтиСтроки(Отбор);
		Для Каждого СтрокаПоказателя ИЗ СтрокиПоказателей Цикл
			СтрокаТаблицы[СтрокаПериода.ИмяКолонки] = СтрокаТаблицы[СтрокаПериода.ИмяКолонки] + СтрокаПоказателя.ЗначениеПоказателя;
		КонецЦикла;
	КонецЦикла;
	Для Каждого ПериодДляРасчета Из МассивПериодовДляРасчета Цикл
		ПоказателиДляРасчета = Новый Структура("Накопленное, Предыдущее",0,0);
		
		Если ПериодДляРасчета = "Квартал2" Тогда
			ПоказателиДляРасчета.Накопленное = СтрокаТаблицы.Полугодие;
			ПоказателиДляРасчета.Предыдущее = СтрокаТаблицы.Квартал1;
		ИначеЕсли ПериодДляРасчета = "Квартал3" Тогда
			ПоказателиДляРасчета.Накопленное = СтрокаТаблицы.Месяцев9;
			ПоказателиДляРасчета.Предыдущее = СтрокаТаблицы.Полугодие;
		ИначеЕсли ПериодДляРасчета = "Квартал4" Тогда
			ПоказателиДляРасчета.Накопленное = СтрокаТаблицы.Год;
			ПоказателиДляРасчета.Предыдущее = СтрокаТаблицы.Месяцев9;
		КонецЕсли;
		Если ПоказателиДляРасчета.Накопленное = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицы[ПериодДляРасчета] = ПоказателиДляРасчета.Накопленное - ПоказателиДляРасчета.Предыдущее;
	КонецЦикла;
	
	// Расставим строки
	// 4. Декларация по НДС - База НДС
	СтрокаТаблицы = ТаблицаСверкиДанных.Добавить();
	СтрокаТаблицы.ИмяПоказателя = "БазаНДС";
	МассивПериодовДляРасчета = Новый Массив;
	Для Каждого СтрокаПериода Из Периоды Цикл
		
		Если СтрокаПериода.Накопительный Тогда
			МассивПериодовДляРасчета.Добавить(СтрокаПериода.ИмяКолонки);
			Продолжить;
		КонецЕсли;
		
		Отбор = Новый Структура("ДатаОкончания, ИсточникОтчета", СтрокаПериода.ДатаОтчета, "РегламентированныйОтчетНДС");
		СтрокиПоказателей = Показатели.НайтиСтроки(Отбор);
		Для Каждого СтрокаПоказателя ИЗ СтрокиПоказателей Цикл
			СтрокаТаблицы[СтрокаПериода.ИмяКолонки] = СтрокаТаблицы[СтрокаПериода.ИмяКолонки] + СтрокаПоказателя.ЗначениеПоказателя;
		КонецЦикла;
	КонецЦикла;
	Для Каждого ПериодДляРасчета Из МассивПериодовДляРасчета Цикл
		ПоказателиДляРасчета = Новый Структура("Слагаемое1, Слагаемое2",0,0);
		
		Если ПериодДляРасчета = "Полугодие" Тогда
			ПоказателиДляРасчета.Слагаемое1 = СтрокаТаблицы.Квартал1;
			ПоказателиДляРасчета.Слагаемое2 = СтрокаТаблицы.Квартал2;
		ИначеЕсли ПериодДляРасчета = "Месяцев9" Тогда
			ПоказателиДляРасчета.Слагаемое1 = СтрокаТаблицы.Полугодие;
			ПоказателиДляРасчета.Слагаемое2 = СтрокаТаблицы.Квартал3;
		ИначеЕсли ПериодДляРасчета = "Год" Тогда
			ПоказателиДляРасчета.Слагаемое1 = СтрокаТаблицы.Месяцев9;
			ПоказателиДляРасчета.Слагаемое2 = СтрокаТаблицы.Квартал4;
		КонецЕсли;
		Если ПоказателиДляРасчета.Слагаемое2 = 0 Тогда
			Продолжить;
		КонецЕсли;
		СтрокаТаблицы[ПериодДляРасчета] = ПоказателиДляРасчета.Слагаемое1 + ПоказателиДляРасчета.Слагаемое2;
	КонецЦикла;
	
	Возврат ТаблицаСверкиДанных;
	
КонецФункции

Функция НовыйМассивПоказателей()
	
	МассивПоказателей = Новый Массив;
	МассивПоказателей.Добавить("Декларация по прибыли");
	МассивПоказателей.Добавить("Прибыль");
	МассивПоказателей.Добавить("Декларация по НДС");
	МассивПоказателей.Добавить("НДС");
	МассивПоказателей.Добавить("Разница");
	Возврат МассивПоказателей
	
КонецФункции

Функция ПараметрыСтроки(Квартал, СтрокиКвартала, Выручка)
	
	Структура = Новый Структура;
	Структура.Вставить("Квартал", Квартал);
	Структура.Вставить("Выручка", 0);
	Структура.Вставить("КорректировкаНДС", 0);
	Структура.Вставить("Доходы", 0);
	Структура.Вставить("КорректировкаПрибыль", 0);
	Структура.Вставить("Разница", 0);
	
	Для Каждого Строка Из СтрокиКвартала Цикл
		Если Строка.Показатель = "СуммаДоходовОтРеализации" Тогда
			Структура.Доходы = Строка.ЗначениеПоказателя;
			Структура.КорректировкаПрибыль = Строка.Вид;
		ИначеЕсли Строка.Показатель = "Выручка" Тогда
			Выручка = Выручка + Строка.ЗначениеПоказателя;
			Структура.Выручка = Выручка;
			Структура.КорректировкаНДС = Строка.Вид;
		КонецЕсли;
	КонецЦикла;
	
	Структура.Разница = Структура.Доходы - Структура.Выручка;
	
	Возврат Структура;
	
КонецФункции

Функция НовыйПериоды(Знач Период)
	
	Периоды = Новый ТаблицаЗначений;
	Периоды.Колонки.Добавить("ИмяПериода", ОбщегоНазначения.ОписаниеТипаСтрока(20));
	Периоды.Колонки.Добавить("ИмяКолонки", ОбщегоНазначения.ОписаниеТипаСтрока(20));
	Периоды.Колонки.Добавить("ДатаОтчета", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	Периоды.Колонки.Добавить("Накопительный", Новый ОписаниеТипов("Булево"));
	Период = КонецКвартала(Период);
	
	НачалоГода = НачалоГода(Период);
	
	Для НомерКвартала = 1 По 4 Цикл
		Квартал = КонецКвартала(ДобавитьМесяц(НачалоГода, 3 * НомерКвартала)-1);
		Если Квартал <= Период Тогда
			ИмяПериода = СтрШаблон("%1 квартал", НомерКвартала);
			ИмяКолонки = СтрШаблон("Квартал%1", НомерКвартала);
			СтрокаПериода = Периоды.Добавить();
			СтрокаПериода.ИмяПериода = ИмяПериода;
			СтрокаПериода.ИмяКолонки = ИмяКолонки;
			СтрокаПериода.ДатаОтчета = Квартал;
		Иначе
			Прервать;
		КонецЕсли;
		Если НомерКвартала = 2 Тогда
			СтрокаПериода = Периоды.Добавить();
			СтрокаПериода.ИмяПериода = "Полугодие";
			СтрокаПериода.ИмяКолонки = "Полугодие";
			СтрокаПериода.ДатаОтчета = Квартал;
			СтрокаПериода.Накопительный = Истина;
		ИначеЕсли НомерКвартала = 3 Тогда
			СтрокаПериода = Периоды.Добавить();
			СтрокаПериода.ИмяПериода = "9 месяцев";
			СтрокаПериода.ИмяКолонки = "Месяцев9";
			СтрокаПериода.ДатаОтчета = Квартал;
			СтрокаПериода.Накопительный = Истина;
		ИначеЕсли НомерКвартала = 4 Тогда
			СтрокаПериода = Периоды.Добавить();
			СтрокаПериода.ИмяПериода = "Год";
			СтрокаПериода.ИмяКолонки = "Год";
			СтрокаПериода.ДатаОтчета = Квартал;
			СтрокаПериода.Накопительный = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Периоды;
	
КонецФункции


#Область ПолучениеДанныхРегламентированныхОтчетов

Функция ПоказателиСверкиДанныхРегламентированныхОтчетов(Организация, ДатаНачала, ДатаОкончания)
	
	ТаблицаОтчетов = ОтчетыСверкиДанныхРегламентированныхОтчетов(Организация, ДатаНачала, ДатаОкончания);
	
	ТаблицаПоказателей = НоваяТаблицаПоказателейСверкиДанныхРегламентированныхОтчетов();
	
	Для Каждого СтрокаОтчета Из ТаблицаОтчетов Цикл
		ВставитьПоказательВТаблицуСверкиДанныхРегламентированныхОтчетов(ТаблицаПоказателей, СтрокаОтчета);
	КонецЦикла;
	
	Возврат ТаблицаПоказателей
	
КонецФункции

Функция ОтчетыСверкиДанныхРегламентированныхОтчетов(Организация, ДатаНачала, ДатаОкончания)
	
	ТаблицаОтчетов = Новый ТаблицаЗначений;
	ТаблицаОтчетов.Колонки.Добавить("РегламентированныйОтчет");
	ТаблицаОтчетов.Колонки.Добавить("ИсточникОтчета");
	ТаблицаОтчетов.Колонки.Добавить("ВыбраннаяФорма");
	ТаблицаОтчетов.Колонки.Добавить("ПериодДокумента");
	ТаблицаОтчетов.Колонки.Добавить("КодНалоговогоОргана");
	ТаблицаОтчетов.Колонки.Добавить("Вид");
	ТаблицаОтчетов.Колонки.Добавить("МоментВремени");
	ТаблицаОтчетов.Колонки.Добавить("ДатаОтчета");
	ТаблицаОтчетов.Колонки.Добавить("ОтчетныйПериод");
	ТаблицаОтчетов.Колонки.Добавить("Периодичность");
	ТаблицаОтчетов.Колонки.Добавить("ДатаНачала");
	ТаблицаОтчетов.Колонки.Добавить("ДатаОкончания");
	
	ВидыОтчетов = ВидыСверкиДанныхРегламентированныхОтчетов();
	Выборка = РегламентированнаяОтчетность.ВыборкаРегламентированныхОтчетов(Организация, ДатаНачала, ДатаОкончания, ВидыОтчетов);
	
	Пока Выборка.Следующий() Цикл
		
		УсловияПоиска = Новый Структура("ИсточникОтчета, ПериодДокумента, КодНалоговогоОргана");
		ЗаполнитьЗначенияСвойств(УсловияПоиска, Выборка);
		
		СтрокиТаблицыОтчетов = ТаблицаОтчетов.НайтиСтроки(УсловияПоиска);
		
		Если СтрокиТаблицыОтчетов.Количество() = 0 Тогда
			// Отчет еще не учитывался.
			НоваяСтрокаТаблицы = ТаблицаОтчетов.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, Выборка);
			
		Иначе
			СтрокаТаблицы = СтрокиТаблицыОтчетов[0];
			
			Если СтрСравнить(Выборка.ВыбраннаяФорма, СтрокаТаблицы.ВыбраннаяФорма) > 0 Тогда
				// Поздняя форма отчета вытесняет предшествующие.
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
				
			ИначеЕсли СтрСравнить(Выборка.ВыбраннаяФорма, СтрокаТаблицы.ВыбраннаяФорма) = 0 Тогда
				Если Выборка.Вид > СтрокаТаблицы.Вид Тогда
					// Поздние корректировки вытесняют предшествующие.
					ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
					
				ИначеЕсли Выборка.Вид = СтрокаТаблицы.Вид Тогда
					Если Выборка.МоментВремени.Сравнить(СтрокаТаблицы.МоментВремени) > 0 Тогда
						// Отчеты созданные позже вытесняют предшествующие.
						ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаОтчетов;
	
КонецФункции

Функция ВидыСверкиДанныхРегламентированныхОтчетов()
	
	ВидыОтчетов = Новый Массив;
	
	ВидыОтчетов.Добавить("РегламентированныйОтчетПрибыль");
	ВидыОтчетов.Добавить("РегламентированныйОтчетНДС");
	
	Возврат ВидыОтчетов;
	
КонецФункции

Функция НоваяТаблицаПоказателейСверкиДанныхРегламентированныхОтчетов();
	
	ТипСтрока  = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254));
	ТипСтрока4 = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(4));
	ТипДата    = Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты);
	ТипЧисло   = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2));
	
	ТаблицаПоказателей = Новый ТаблицаЗначений;
	ТаблицаПоказателей.Колонки.Добавить("Показатель", ТипСтрока);
	ТаблицаПоказателей.Колонки.Добавить("ИсточникОтчета", ТипСтрока);
	ТаблицаПоказателей.Колонки.Добавить("ДатаОтчета", ТипДата);
	ТаблицаПоказателей.Колонки.Добавить("РегламентированныйОтчет", ОбщегоНазначения.ОписаниеТипаВсеСсылки());
	ТаблицаПоказателей.Колонки.Добавить("ОтчетныйПериод", ТипДата);
	ТаблицаПоказателей.Колонки.Добавить("КодНалоговогоОргана", ТипСтрока4);
	ТаблицаПоказателей.Колонки.Добавить("Периодичность");
	ТаблицаПоказателей.Колонки.Добавить("ДатаНачала", ТипДата);
	ТаблицаПоказателей.Колонки.Добавить("ДатаОкончания", ТипДата);
	ТаблицаПоказателей.Колонки.Добавить("ПериодДокумента", ТипСтрока);
	ТаблицаПоказателей.Колонки.Добавить("ЗначениеПоказателя", ТипЧисло);
	ТаблицаПоказателей.Колонки.Добавить("Вид", ТипЧисло);
	
	Возврат ТаблицаПоказателей;
	
КонецФункции

Процедура ВставитьПоказательВТаблицуСверкиДанныхРегламентированныхОтчетов(ТаблицаПоказателей, ОписаниеОтчета)
	
	Если ОписаниеОтчета.ИсточникОтчета = "РегламентированныйОтчетПрибыль" Тогда
		ВставитьПоказатели_Прибыль(ТаблицаПоказателей, ОписаниеОтчета);
		
	ИначеЕсли ОписаниеОтчета.ИсточникОтчета = "РегламентированныйОтчетНДС" Тогда
		ВставитьПоказатели_НДС(ТаблицаПоказателей, ОписаниеОтчета);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВставитьПоказатели_Прибыль(ТаблицаПоказателей, ОписаниеОтчета)
	
	СведенияОтчета = ОписаниеОтчета.РегламентированныйОтчет.ДанныеОтчета.Получить();
	
	ЗначениеПоказателя = 0;
	
	Если ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2016Кв4"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2015Кв1" Тогда
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + ПоказательОтчета(ДанныеЛиста, "П000200001003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаДоходовОтРеализации";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + ПоказательОтчета(ДанныеЛиста, "П000200002003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "ВнереализационныеДоходы";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
	Иначе
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + ПоказательОтчета(ДанныеЛиста, "П002000001003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаДоходовОтРеализации";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + ПоказательОтчета(ДанныеЛиста, "П002000002003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаДоходовОтРеализации";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВставитьПоказатели_НДС(ТаблицаПоказателей, ОписаниеОтчета)
	
	СведенияОтчета = ОписаниеОтчета.РегламентированныйОтчет.ДанныеОтчета.Получить();
	
	Раздел3 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел3;
	
	ЗначениеПоказателя = ПоказательОтчета(Раздел3, "П000300001003")
		+ ПоказательОтчета(Раздел3, "П000300002003");
		
	НоваяСтрока = ТаблицаПоказателей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
	НоваяСтрока.Показатель = "Выручка";
	НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
	
КонецПроцедуры

Функция ПоказательОтчета(ИсточникСведений, ИмяПоказателя)
	
	ЗначениеПоказателя = 0;
	
	Если ТипЗнч(ИсточникСведений) = Тип("Структура") Тогда
		Если ИсточникСведений.Свойство(ИмяПоказателя) Тогда
			ЗначениеПоказателя = ИсточникСведений[ИмяПоказателя];
		КонецЕсли;
		
	Иначе
		ВызватьИсключение "Попытка получить значение показателя, сохраненного в неподдерживаемом типе данных";
		
	КонецЕсли;
	
	Возврат ЗначениеПоказателя;
	
КонецФункции

#КонецОбласти